import React, { useState } from 'react';
import { useParams, useNavigate, useLocation } from 'react-router-dom';
import './Styles/OrganizationProfile.css';

function OrganizationProfile() {
    const { id } = useParams();
    const navigate = useNavigate();
    const location = useLocation();

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ state, –µ—Å–ª–∏ –æ–Ω–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã, –∏–ª–∏ –º–æ–∫-–¥–∞–Ω–Ω—ã–µ
    const mockData = {
        id: Number(id),
        name: 'Telegram',
        description: '–¶–∏—Ñ—Ä–æ–≤–æ–µ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ Telegram\n–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, –†–æ—Å—Å–∏—è\n–î–ª–∏–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏...',
        photos: [
            { id: 1, url: 'https://via.placeholder.com/100' },
            { id: 2, url: 'https://via.placeholder.com/100' },
            { id: 3, url: 'https://via.placeholder.com/100' },
            { id: 4, url: 'https://via.placeholder.com/100' },
        ],
        rating: 5,
    };

    const initialOrganization = location.state?.organization || mockData;

    const [organization, setOrganization] = useState(initialOrganization);
    const [isEditing, setIsEditing] = useState(false);
    const [name, setName] = useState(initialOrganization.name);
    const [description, setDescription] = useState(initialOrganization.description);
    const [photos, setPhotos] = useState(initialOrganization.photos);
    const [error, setError] = useState('');

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ñ–æ—Ç–æ (–ª–æ–∫–∞–ª—å–Ω–æ)
    const handleAddPhoto = (e) => {
        const file = e.target.files[0];
        if (!file) {
            setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ç–æ');
            return;
        }

        if (!file.type.startsWith('image/')) {
            setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
            return;
        }

        if (file.size > 5 * 1024 * 1024) {
            setError('–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ç–æ –º–µ–Ω—å—à–µ 5MB.');
            return;
        }

        const newPhoto = {
            id: Date.now(),
            url: URL.createObjectURL(file),
        };
        setPhotos([...photos, newPhoto]);
        setError('');
        e.target.value = ''; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º input
    };

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π (–ª–æ–∫–∞–ª—å–Ω–æ)
    const handleSave = () => {
        setOrganization({
            ...organization,
            name,
            description,
            photos,
        });
        setIsEditing(false);
        setError('');
    };

    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const toggleEditMode = () => {
        setIsEditing(!isEditing);
        setError('');
    };

    // –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Ç–∞–±–∞–º
    const handleTabChange = (tab) => {
        console.log(`–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É: ${tab}`);
    };

    return (
        <div className="organization-profile">
            <div className="header">
                <div className="header-background">
                    <div className="header-top">
                        <div className="logo-info">
                            <img src="/telegram-logo.png" alt="Telegram Logo" className="logo" />
                            <span className="info-icon">i</span>
                        </div>
                        <div className="rating">
                            <span>–†–µ–π—Ç–∏–Ω–≥:</span>
                            {[...Array(5)].map((_, i) => (
                                <span key={i} className="star">‚òÖ</span>
                            ))}
                        </div>
                    </div>
                    <div className="header-bottom">
                        <div className="title-wrapper">
                            {isEditing ? (
                                <input
                                    type="text"
                                    value={name}
                                    onChange={(e) => setName(e.target.value)}
                                    className="title-input"
                                />
                            ) : (
                                <h1 className="title">{name}</h1>
                            )}
                            {!isEditing && (
                                <button className="edit-btn" onClick={toggleEditMode}>
                                    ‚úèÔ∏è
                                </button>
                            )}
                        </div>
                        <p className="subtitle">–ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</p>
                    </div>
                </div>
            </div>

            <div className="portfolio">
                <div className="portfolio-header">
                    <h2>–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ</h2>
                    <button className="view-all-btn">–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å—ë</button>
                </div>
                <div className="portfolio-grid">
                    {photos.map((photo) => (
                        <img
                            key={photo.id}
                            src={photo.url}
                            alt="Portfolio item"
                            className="portfolio-item"
                        />
                    ))}
                    {isEditing && (
                        <label className="add-photo-btn">
                            <span>+</span>
                            <input
                                type="file"
                                accept="image/*"
                                style={{ display: 'none' }}
                                onChange={handleAddPhoto}
                            />
                        </label>
                    )}
                </div>
            </div>

            <div className="tabs">
                <button
                    className="tab-btn active"
                    onClick={() => handleTabChange('projects')}
                >
                    –ü—Ä–æ–µ–∫—Ç—ã
                </button>
                <button
                    className="tab-btn"
                    onClick={() => handleTabChange('castings')}
                >
                    –ö–∞—Å—Ç–∏–Ω–≥ –∏ –≤–∞–∫–∞–Ω—Å–∏–∏
                </button>
                <button
                    className="tab-btn"
                    onClick={() => handleTabChange('reviews')}
                >
                    –û—Ç–∑—ã–≤—ã
                </button>
            </div>

            <div className="info">
                <h3>–¶–∏—Ñ—Ä–æ–≤–æ–µ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ</h3>
                {isEditing ? (
                    <textarea
                        value={description}
                        onChange={(e) => setDescription(e.target.value)}
                        className="description-input"
                    />
                ) : (
                    <p>{description}</p>
                )}
            </div>

            {error && <p className="error-message">{error}</p>}

            <div className="action-buttons">
                {isEditing ? (
                    <button
                        className="save-btn"
                        onClick={handleSave}
                    >
                        –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                    </button>
                ) : (
                    <button
                        className="create-project-btn"
                        onClick={() => navigate('/create-project')}
                    >
                        –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç
                    </button>
                )}
            </div>

            <div className="bottom-nav">
                <button className="nav-btn" onClick={() => navigate('/')}>
                    üè†
                </button>
                <button className="nav-btn" onClick={() => navigate('/profile')}>
                    üë§
                </button>
                <button className="nav-btn active" onClick={() => navigate(`/organization/${id}`)}>
                    üñºÔ∏è
                </button>
                <button className="nav-btn" onClick={() => navigate('/settings')}>
                    ‚öôÔ∏è
                </button>
            </div>
        </div>
    );
}

export default OrganizationProfile;